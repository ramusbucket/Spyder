<script src="~/Scripts/jquery-3.1.1-vsdoc.js"></script>

<div class="help-block"></div>

<div class="row">
    <div class="col-lg-4" data-session="sessionId">
        <h1>
            <a href="/Sessions/Details/sessionId"></a> Session ID / User
        </h1>
        <div class="row camera-snapshots">
            <ul class="list-inline">
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
            </ul>
        </div>

        <div class="row display-snapshots">
            <ul class="list-inline">
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
                <li>
                    <img src="https://pbs.twimg.com/profile_images/831993825635745796/HnVmB0-k.jpg" width="100" height="100" />
                </li>
            </ul>
        </div>

        <div class="row keyboard-keys">
            <ul class="list-inline">
                @for (int i = 0; i < 15; i++)
                {
                    <li>
                        <span>A</span>
                    </li>
                }
            </ul>
        </div>

        <div class="row network-packets">
            <ul class="list-inline">
                <li>
                    <span>214.42.124.23:9090 => 124.21.29.212:8082</span>
                </li>
                <li>
                    <span>214.42.124.23:9090 => 124.21.29.212:8082</span>
                </li>
            </ul>
        </div>

        <div class="row foreground-processes">
            <ul class="list-inline">
                <li>
                    <span>Skype</span>
                </li>
                <li>
                    <span>chrome</span>
                </li>
                <li>
                    <span>devenv</span>
                </li>
                <li>
                    <span>mozzila firefox</span>
                </li>
            </ul>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var activeSessions;
        var url = "/MonitoringSessions/GetActiveSessionsDetails?page=1&itemsPerPage=6";

        $.get(url, function (response) {
            if (response.IsSuccessful) {
                activeSessions = response.Result;
                var activeSessionsCount = activeSessions.length;
                
                console.log(activeSessions);
            } else {
                console.log(response.Message);
            }
        });
    </script>
}


@*Get active sessions
    MongoDB collection for active users mapping
    MonitoringSessions
    =>UserId
    =>SessionId
    =>IsActive

    Create sessionId on desktop application level.

    Activation/Deactivation is done on mongo savers level.
    If we didn't receive any update for sessionID = X in the last N minutes,
    the session is marked as inactive.
    We will have a worker that scans mongoDb collections
    for the last updated item from given sessionId and checks if its update date is < DateTime.Now - 60 mins

    Mongo indexes
    CollectionItem creation date (might be possible to extract it from object id)
    otherwise, add a base mongo item with insertion date

    // Mongo Savers
    // Save the item and make a push notification to Website about this item
    if
    => SessionId
    =>

    // Home controller
    // Realtime brief view of users activity
    var activeSessions = db.Collection("MonitoringSessions").find({isActive: true})

    foreach(session in activeSessions)
    {

    }


    // scaling mongo savers
    // => potential many push notification requests
    // => we kill the website

    // implement timer on client level(javascript)
    // => request ajax updates
    // flaws
    // => potential multiple redundant requests to MongoDB

    // Display last 5 user desktop snapshots
    // Display last 5 user camera snapshots
    // Display last 5 user foreground processes
    // Display last 5 user started processes
    // Display last 20 user tcp/ip requests
    // Display last 100 user keys pressed (with option to reconstruct as sentence)*@